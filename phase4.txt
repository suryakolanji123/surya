import numpy as np

# Define grid size and obstacles
GRID_SIZE = 20
grid = np.zeros((GRID_SIZE, GRID_SIZE))

# Set start and goal positions
start = (0, 0)
goal = (GRID_SIZE - 1, GRID_SIZE - 1)

# Add obstacles to the grid
obstacles = [(5, i) for i in range(5, 15)] + [(i, 10) for i in range(10, 18)]
for x, y in obstacles:
    grid[y][x] = -1  # -1 = obstacle

# Define possible movement directions (up, down, left, right, diagonals)
directions = [(-1, 0), (1, 0), (0, -1), (0, 1),
              (-1, -1), (-1, 1), (1, -1), (1, 1)]

# Function to check if a position is valid (within grid and not an obstacle)
def is_valid(x, y):
    return 0 <= x < GRID_SIZE and 0 <= y < GRID_SIZE and grid[y][x] != -1

# Function to calculate Euclidean distance to the goal
def get_distance(x, y):
    return np.sqrt((goal[0] - x) ** 2 + (goal[1] - y) ** 2)

# Function to move towards the goal by selecting the best direction
def move_towards_goal(position):
    x, y = position
    best_move = position
    min_dist = float('inf')
    
    for dx, dy in directions:
        nx, ny = x + dx, y + dy
        if is_valid(nx, ny):
            dist = get_distance(nx, ny)
            if dist < min_dist:
                min_dist = dist
                best_move = (nx, ny)
    
    return best_move

# Function to print the grid with the robot's current position and path
def print_grid(position, path):
    grid_copy = grid.copy()
    for x, y in path:
        grid_copy[y][x] = 0.5  # Path (semi-transparent)
    grid_copy[position[1]][position[0]] = 1  # Current position (robot)
    
    for row in grid_copy:
        print(' '.join(['#' if cell == -1 else '.' if cell == 0 else '*' if cell == 1 else 'o' for cell in row]))
    print()

# Main simulation loop
position = start
path = [position]

while position != goal:
    position = move_towards_goal(position)
    path.append(position)
    print(f"Current position: {position}")
    print_grid(position, path)
    
    input("Press Enter to move to the next step...")

print("Goal reached!")
